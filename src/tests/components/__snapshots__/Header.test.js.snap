// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render header component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="content-container"
>
        <div
                className="header__content"
        >
                <Unknown
                        className="header__title"
                        to="/dashboard"
                >
                        <h1>
                                Budget Reacts!
                        </h1>
                </Unknown>
                <button
                        className="button button--link"
                        onClick={undefined}
                >
                        Log out
                </button>
        </div>
</div>,
      "className": "header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="header__content"
>
          <Unknown
                    className="header__title"
                    to="/dashboard"
          >
                    <h1>
                              Budget Reacts!
                    </h1>
          </Unknown>
          <button
                    className="button button--link"
                    onClick={undefined}
          >
                    Log out
          </button>
</div>,
        "className": "content-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Unknown
              className="header__title"
              to="/dashboard"
>
              <h1>
                            Budget Reacts!
              </h1>
</Unknown>,
            <button
              className="button button--link"
              onClick={undefined}
>
              Log out
</button>,
          ],
          "className": "header__content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <h1>
                Budget Reacts!
</h1>,
              "className": "header__title",
              "to": "/dashboard",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Budget Reacts!",
              },
              "ref": null,
              "rendered": "Budget Reacts!",
              "type": "h1",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Link",
              "propTypes": Object {
                "innerRef": [Function],
                "onClick": [Function],
                "replace": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Log out",
              "className": "button button--link",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": "Log out",
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="content-container"
>
          <div
                    className="header__content"
          >
                    <Unknown
                              className="header__title"
                              to="/dashboard"
                    >
                              <h1>
                                        Budget Reacts!
                              </h1>
                    </Unknown>
                    <button
                              className="button button--link"
                              onClick={undefined}
                    >
                              Log out
                    </button>
          </div>
</div>,
        "className": "header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="header__content"
>
            <Unknown
                        className="header__title"
                        to="/dashboard"
            >
                        <h1>
                                    Budget Reacts!
                        </h1>
            </Unknown>
            <button
                        className="button button--link"
                        onClick={undefined}
            >
                        Log out
            </button>
</div>,
          "className": "content-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Unknown
                className="header__title"
                to="/dashboard"
>
                <h1>
                                Budget Reacts!
                </h1>
</Unknown>,
              <button
                className="button button--link"
                onClick={undefined}
>
                Log out
</button>,
            ],
            "className": "header__content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <h1>
                  Budget Reacts!
</h1>,
                "className": "header__title",
                "to": "/dashboard",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Budget Reacts!",
                },
                "ref": null,
                "rendered": "Budget Reacts!",
                "type": "h1",
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Link",
                "propTypes": Object {
                  "innerRef": [Function],
                  "onClick": [Function],
                  "replace": [Function],
                  "target": [Function],
                  "to": [Function],
                },
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Log out",
                "className": "button button--link",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": "Log out",
              "type": "button",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
